function solution(s) {
  let answer = [];
  
  for (let i=0; i<s.length; i++) {
      if (i === 0) answer.push(-1);
      else {
          let last = s.slice(0, i).lastIndexOf(s[i]);
          last === -1 ? answer.push(-1) : answer.push(i-last)
      }
  }
  
  return answer;
}

/*
정확성  테스트
테스트 1 〉	통과 (0.06ms, 33.5MB)
테스트 2 〉	통과 (0.16ms, 33.2MB)
테스트 3 〉	통과 (0.23ms, 33.6MB)
테스트 4 〉	통과 (0.30ms, 33.3MB)
테스트 5 〉	통과 (3.56ms, 37.7MB)
테스트 6 〉	통과 (0.81ms, 37.2MB)
테스트 7 〉	통과 (4.31ms, 37.7MB)
테스트 8 〉	통과 (0.67ms, 37.2MB)
테스트 9 〉	통과 (3.89ms, 37.7MB)
테스트 10 〉	통과 (0.45ms, 33.7MB)
테스트 11 〉	통과 (3.48ms, 37.8MB)
테스트 12 〉	통과 (0.07ms, 33.4MB)
테스트 13 〉	통과 (0.06ms, 33.5MB)
테스트 14 〉	통과 (0.31ms, 33.5MB)
테스트 15 〉	통과 (0.07ms, 33.4MB)
테스트 16 〉	통과 (0.17ms, 33.5MB)
테스트 17 〉	통과 (0.13ms, 33.4MB)
테스트 18 〉	통과 (0.43ms, 33.8MB)
테스트 19 〉	통과 (0.53ms, 33.9MB)
테스트 20 〉	통과 (0.20ms, 33.6MB)
테스트 21 〉	통과 (0.14ms, 33.6MB)
테스트 22 〉	통과 (0.93ms, 37.5MB)
테스트 23 〉	통과 (0.24ms, 33.6MB)
테스트 24 〉	통과 (0.22ms, 33.6MB)
테스트 25 〉	통과 (0.26ms, 33.6MB)
테스트 26 〉	통과 (0.27ms, 33.6MB)
테스트 27 〉	통과 (0.26ms, 33.7MB)
테스트 28 〉	통과 (0.24ms, 33.7MB)
테스트 29 〉	통과 (0.04ms, 33.4MB)
테스트 30 〉	통과 (3.61ms, 37.7MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
*/