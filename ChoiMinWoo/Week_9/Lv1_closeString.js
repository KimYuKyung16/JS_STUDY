function solution(s) {
    let answer = [];
    let array = [];

    for (let i = 0; i < s.length; i++) {
        if (array.includes(s[i])) {
            answer.push(i - array.lastIndexOf(s[i]));
        } else {
            answer.push(-1);
        }
        array.push(s[i]);
    }
    return answer;
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.07ms, 33.4MB)
// 테스트 2 〉	통과 (0.20ms, 33.5MB)
// 테스트 3 〉	통과 (0.20ms, 32.8MB)
// 테스트 4 〉	통과 (0.61ms, 33.8MB)
// 테스트 5 〉	통과 (39.85ms, 38.1MB)
// 테스트 6 〉	통과 (3.79ms, 37.3MB)
// 테스트 7 〉	통과 (14.79ms, 38.3MB)
// 테스트 8 〉	통과 (1.80ms, 37.3MB)
// 테스트 9 〉	통과 (10.57ms, 38.1MB)
// 테스트 10 〉	통과 (1.83ms, 33.8MB)
// 테스트 11 〉	통과 (14.18ms, 38.3MB)
// 테스트 12 〉	통과 (0.05ms, 33.5MB)
// 테스트 13 〉	통과 (0.07ms, 33.4MB)
// 테스트 14 〉	통과 (0.39ms, 33.6MB)
// 테스트 15 〉	통과 (0.05ms, 33.5MB)
// 테스트 16 〉	통과 (0.13ms, 33.5MB)
// 테스트 17 〉	통과 (0.14ms, 33.7MB)
// 테스트 18 〉	통과 (1.45ms, 33.8MB)
// 테스트 19 〉	통과 (1.16ms, 33.9MB)
// 테스트 20 〉	통과 (0.30ms, 33.5MB)
// 테스트 21 〉	통과 (0.15ms, 33.6MB)
// 테스트 22 〉	통과 (2.42ms, 37.6MB)
// 테스트 23 〉	통과 (0.31ms, 33.6MB)
// 테스트 24 〉	통과 (0.39ms, 33.7MB)
// 테스트 25 〉	통과 (0.48ms, 33.7MB)
// 테스트 26 〉	통과 (0.19ms, 33.4MB)
// 테스트 27 〉	통과 (0.76ms, 33.6MB)
// 테스트 28 〉	통과 (0.41ms, 33.6MB)
// 테스트 29 〉	통과 (0.06ms, 33.5MB)
// 테스트 30 〉	통과 (14.56ms, 38.3MB)
// 채점 결과
// 정확성: 100.0
// 합계: 100.0 / 100.0
