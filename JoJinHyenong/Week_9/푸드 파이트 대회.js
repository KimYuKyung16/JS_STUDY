function solution(food) {
    let answer=[];
    let array = food.map((item,index)=> item=index);
    for(let i=1;i<food.length;i++){ 
        for(let j=0;j<Math.floor(food[i]/2);j++){
            answer.push(`${array[i]}`)
        }
    }
    answer.push("0",answer.slice().reverse());
    return answer.flat().join('');
}
// 1. 순서를 정한다.
// 2. 음식이 몇개가 필요한지 구한다.
// 3. 배치를 해준 후 아직 반만 구했으니깐 push로 0과 구한 배열을 거꾸로 해서 더해준다.
// 3. flat함수와 join함수를 써서 완성시켜준다.

// 정확성  테스트
// 테스트 1 〉	통과 (1.27ms, 33.6MB)
// 테스트 2 〉	통과 (1.07ms, 33.6MB)
// 테스트 3 〉	통과 (0.60ms, 33.6MB)
// 테스트 4 〉	통과 (1.08ms, 33.9MB)
// 테스트 5 〉	통과 (0.30ms, 33.5MB)
// 테스트 6 〉	통과 (2.46ms, 33.7MB)
// 테스트 7 〉	통과 (1.12ms, 33.7MB)
// 테스트 8 〉	통과 (0.71ms, 33.7MB)
// 테스트 9 〉	통과 (0.43ms, 33.4MB)
// 테스트 10 〉	통과 (0.50ms, 33.6MB)
// 테스트 11 〉	통과 (0.11ms, 33.6MB)
// 테스트 12 〉	통과 (0.10ms, 33.5MB)
// 테스트 13 〉	통과 (0.08ms, 33.5MB)
// 테스트 14 〉	통과 (2.69ms, 34MB)
// 테스트 15 〉	통과 (0.07ms, 33.4MB)
// 테스트 16 〉	통과 (0.07ms, 33.4MB)
// 테스트 17 〉	통과 (0.15ms, 33.5MB)
// 테스트 18 〉	통과 (0.07ms, 33.5MB)
// 테스트 19 〉	통과 (0.07ms, 33.5MB)
// 테스트 20 〉	통과 (0.08ms, 33.7MB)
// 채점 결과
// 정확성: 100.0
// 합계: 100.0 / 100.0