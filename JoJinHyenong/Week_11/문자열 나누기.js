function solution(s) {
    let answer = 0;
    let fixedChar = "";
    let cnt1 = 0;
    let cnt2 = 0;
  
    // 문자를 for of 문으로 하나씩 확인한다.
    for (let c of s) {
  
      // 첫 문자를 알아야하기 때문에
      // 미리 선언해둔 fixedChar이 공백이면
      // 첫 문자를 fixedChar에 넣어준다.
      if (!fixedChar) fixedChar = c;
      
      // 첫 문자와 들어온 c가 같다면 cnt1를 증가시킨다.
      if(fixedChar === c) cnt1++;
      // 첫 문자와 다르다면 cnt2를 증가시킨다.
      else cnt2++;
      // cnt1과 cnt2의 숫자가 같아지면
      // answer를 1 증가시키고 나머지를 초기화 한다.
      if (cnt1 === cnt2) {
          answer++;
          cnt1 = 0;
          cnt2 = 0;
          fixedChar = "";
      }
    }
  
    // 반복문이 끝났는데 fixedChar이 남아있는 경우는
    // 잔여 문자가 남아있는 경우이므로 answer을 1 증가시킨다.
    if (fixedChar) answer++;
  
    return answer;
  }

//   정확성  테스트
// 테스트 1 〉	통과 (0.05ms, 33.4MB)
// 테스트 2 〉	통과 (0.42ms, 33.7MB)
// 테스트 3 〉	통과 (0.64ms, 33.9MB)
// 테스트 4 〉	통과 (0.07ms, 33.5MB)
// 테스트 5 〉	통과 (0.05ms, 33.4MB)
// 테스트 6 〉	통과 (0.05ms, 33.4MB)
// 테스트 7 〉	통과 (0.06ms, 33.5MB)
// 테스트 8 〉	통과 (0.07ms, 33.4MB)
// 테스트 9 〉	통과 (0.33ms, 33.6MB)
// 테스트 10 〉	통과 (0.54ms, 33.7MB)
// 테스트 11 〉	통과 (0.25ms, 33.6MB)
// 테스트 12 〉	통과 (0.43ms, 33.7MB)
// 테스트 13 〉	통과 (3.12ms, 37.1MB)
// 테스트 14 〉	통과 (3.17ms, 37.1MB)
// 테스트 15 〉	통과 (0.25ms, 33.5MB)
// 테스트 16 〉	통과 (0.68ms, 33.7MB)
// 테스트 17 〉	통과 (0.40ms, 33.7MB)
// 테스트 18 〉	통과 (0.61ms, 33.7MB)
// 테스트 19 〉	통과 (0.43ms, 33.7MB)
// 테스트 20 〉	통과 (0.61ms, 33.8MB)
// 테스트 21 〉	통과 (3.35ms, 37.1MB)
// 테스트 22 〉	통과 (0.49ms, 33.7MB)
// 테스트 23 〉	통과 (0.28ms, 33.6MB)
// 테스트 24 〉	통과 (0.38ms, 33.8MB)
// 테스트 25 〉	통과 (3.30ms, 37.1MB)
// 테스트 26 〉	통과 (0.67ms, 33.8MB)
// 테스트 27 〉	통과 (0.59ms, 33.8MB)
// 테스트 28 〉	통과 (0.43ms, 33.6MB)
// 테스트 29 〉	통과 (3.17ms, 37.2MB)
// 테스트 30 〉	통과 (0.45ms, 33.7MB)
// 테스트 31 〉	통과 (0.05ms, 33.4MB)
// 테스트 32 〉	통과 (0.05ms, 33.4MB)
// 테스트 33 〉	통과 (0.05ms, 33.4MB)
// 테스트 34 〉	통과 (0.05ms, 33.6MB)
// 테스트 35 〉	통과 (0.05ms, 33.5MB)
// 테스트 36 〉	통과 (0.07ms, 33.4MB)
// 테스트 37 〉	통과 (0.05ms, 33.6MB)
// 테스트 38 〉	통과 (0.07ms, 33.5MB)
// 테스트 39 〉	통과 (0.06ms, 33.4MB)
// 테스트 40 〉	통과 (0.28ms, 33.5MB)
// 테스트 41 〉	통과 (3.40ms, 37MB)
// 테스트 42 〉	통과 (3.32ms, 37.1MB)
// 채점 결과
// 정확성: 100.0
// 합계: 100.0 / 100.0